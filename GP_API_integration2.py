{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "b7614081-d33b-428e-a9d8-5345a9b64be1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: gradio in c:\\users\\mergi\\anaconda3\\lib\\site-packages (5.36.2)\n",
      "Requirement already satisfied: aiofiles<25.0,>=22.0 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from gradio) (24.1.0)\n",
      "Requirement already satisfied: anyio<5.0,>=3.0 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from gradio) (4.2.0)\n",
      "Requirement already satisfied: brotli>=1.1.0 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from gradio) (1.1.0)\n",
      "Requirement already satisfied: fastapi<1.0,>=0.115.2 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from gradio) (0.116.0)\n",
      "Requirement already satisfied: ffmpy in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from gradio) (0.6.0)\n",
      "Requirement already satisfied: gradio-client==1.10.4 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from gradio) (1.10.4)\n",
      "Requirement already satisfied: groovy~=0.1 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from gradio) (0.1.2)\n",
      "Requirement already satisfied: httpx<1.0,>=0.24.1 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from gradio) (0.27.0)\n",
      "Requirement already satisfied: huggingface-hub>=0.28.1 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from gradio) (0.33.2)\n",
      "Requirement already satisfied: jinja2<4.0 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from gradio) (3.1.4)\n",
      "Requirement already satisfied: markupsafe<4.0,>=2.0 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from gradio) (2.1.3)\n",
      "Requirement already satisfied: numpy<3.0,>=1.0 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from gradio) (1.26.4)\n",
      "Requirement already satisfied: orjson~=3.0 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from gradio) (3.10.18)\n",
      "Requirement already satisfied: packaging in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from gradio) (24.1)\n",
      "Requirement already satisfied: pandas<3.0,>=1.0 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from gradio) (2.2.2)\n",
      "Requirement already satisfied: pillow<12.0,>=8.0 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from gradio) (10.4.0)\n",
      "Requirement already satisfied: pydantic<2.12,>=2.0 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from gradio) (2.8.2)\n",
      "Requirement already satisfied: pydub in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from gradio) (0.25.1)\n",
      "Requirement already satisfied: python-multipart>=0.0.18 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from gradio) (0.0.20)\n",
      "Requirement already satisfied: pyyaml<7.0,>=5.0 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from gradio) (6.0.1)\n",
      "Requirement already satisfied: ruff>=0.9.3 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from gradio) (0.12.2)\n",
      "Requirement already satisfied: safehttpx<0.2.0,>=0.1.6 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from gradio) (0.1.6)\n",
      "Requirement already satisfied: semantic-version~=2.0 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from gradio) (2.10.0)\n",
      "Requirement already satisfied: starlette<1.0,>=0.40.0 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from gradio) (0.46.2)\n",
      "Requirement already satisfied: tomlkit<0.14.0,>=0.12.0 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from gradio) (0.13.3)\n",
      "Requirement already satisfied: typer<1.0,>=0.12 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from gradio) (0.16.0)\n",
      "Requirement already satisfied: typing-extensions~=4.0 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from gradio) (4.11.0)\n",
      "Requirement already satisfied: uvicorn>=0.14.0 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from gradio) (0.35.0)\n",
      "Requirement already satisfied: fsspec in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from gradio-client==1.10.4->gradio) (2024.6.1)\n",
      "Requirement already satisfied: websockets<16.0,>=10.0 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from gradio-client==1.10.4->gradio) (15.0.1)\n",
      "Requirement already satisfied: idna>=2.8 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from anyio<5.0,>=3.0->gradio) (3.7)\n",
      "Requirement already satisfied: sniffio>=1.1 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from anyio<5.0,>=3.0->gradio) (1.3.0)\n",
      "Requirement already satisfied: certifi in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from httpx<1.0,>=0.24.1->gradio) (2025.4.26)\n",
      "Requirement already satisfied: httpcore==1.* in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from httpx<1.0,>=0.24.1->gradio) (1.0.2)\n",
      "Requirement already satisfied: h11<0.15,>=0.13 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from httpcore==1.*->httpx<1.0,>=0.24.1->gradio) (0.14.0)\n",
      "Requirement already satisfied: filelock in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from huggingface-hub>=0.28.1->gradio) (3.13.1)\n",
      "Requirement already satisfied: requests in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from huggingface-hub>=0.28.1->gradio) (2.32.3)\n",
      "Requirement already satisfied: tqdm>=4.42.1 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from huggingface-hub>=0.28.1->gradio) (4.66.5)\n",
      "Requirement already satisfied: python-dateutil>=2.8.2 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from pandas<3.0,>=1.0->gradio) (2.9.0.post0)\n",
      "Requirement already satisfied: pytz>=2020.1 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from pandas<3.0,>=1.0->gradio) (2024.1)\n",
      "Requirement already satisfied: tzdata>=2022.7 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from pandas<3.0,>=1.0->gradio) (2023.3)\n",
      "Requirement already satisfied: annotated-types>=0.4.0 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from pydantic<2.12,>=2.0->gradio) (0.6.0)\n",
      "Requirement already satisfied: pydantic-core==2.20.1 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from pydantic<2.12,>=2.0->gradio) (2.20.1)\n",
      "Requirement already satisfied: click>=8.0.0 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from typer<1.0,>=0.12->gradio) (8.1.7)\n",
      "Requirement already satisfied: shellingham>=1.3.0 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from typer<1.0,>=0.12->gradio) (1.5.0)\n",
      "Requirement already satisfied: rich>=10.11.0 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from typer<1.0,>=0.12->gradio) (13.7.1)\n",
      "Requirement already satisfied: colorama in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from click>=8.0.0->typer<1.0,>=0.12->gradio) (0.4.6)\n",
      "Requirement already satisfied: six>=1.5 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from python-dateutil>=2.8.2->pandas<3.0,>=1.0->gradio) (1.16.0)\n",
      "Requirement already satisfied: markdown-it-py>=2.2.0 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from rich>=10.11.0->typer<1.0,>=0.12->gradio) (2.2.0)\n",
      "Requirement already satisfied: pygments<3.0.0,>=2.13.0 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from rich>=10.11.0->typer<1.0,>=0.12->gradio) (2.15.1)\n",
      "Requirement already satisfied: charset-normalizer<4,>=2 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from requests->huggingface-hub>=0.28.1->gradio) (3.3.2)\n",
      "Requirement already satisfied: urllib3<3,>=1.21.1 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from requests->huggingface-hub>=0.28.1->gradio) (2.2.3)\n",
      "Requirement already satisfied: mdurl~=0.1 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from markdown-it-py>=2.2.0->rich>=10.11.0->typer<1.0,>=0.12->gradio) (0.1.0)\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING: Ignoring invalid distribution ~rotli (C:\\Users\\mergi\\anaconda3\\Lib\\site-packages)\n",
      "WARNING: Ignoring invalid distribution ~rotli (C:\\Users\\mergi\\anaconda3\\Lib\\site-packages)\n",
      "WARNING: Ignoring invalid distribution ~rotli (C:\\Users\\mergi\\anaconda3\\Lib\\site-packages)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting langchain\n",
      "  Using cached langchain-0.3.26-py3-none-any.whl.metadata (7.8 kB)\n",
      "Collecting langchain-core<1.0.0,>=0.3.66 (from langchain)\n",
      "  Using cached langchain_core-0.3.68-py3-none-any.whl.metadata (5.8 kB)\n",
      "Collecting langchain-text-splitters<1.0.0,>=0.3.8 (from langchain)\n",
      "  Using cached langchain_text_splitters-0.3.8-py3-none-any.whl.metadata (1.9 kB)\n",
      "Collecting langsmith>=0.1.17 (from langchain)\n",
      "  Downloading langsmith-0.4.5-py3-none-any.whl.metadata (15 kB)\n",
      "Requirement already satisfied: pydantic<3.0.0,>=2.7.4 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from langchain) (2.8.2)\n",
      "Requirement already satisfied: SQLAlchemy<3,>=1.4 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from langchain) (2.0.34)\n",
      "Requirement already satisfied: requests<3,>=2 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from langchain) (2.32.3)\n",
      "Requirement already satisfied: PyYAML>=5.3 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from langchain) (6.0.1)\n",
      "Requirement already satisfied: tenacity!=8.4.0,<10.0.0,>=8.1.0 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from langchain-core<1.0.0,>=0.3.66->langchain) (8.2.3)\n",
      "Requirement already satisfied: jsonpatch<2.0,>=1.33 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from langchain-core<1.0.0,>=0.3.66->langchain) (1.33)\n",
      "Requirement already satisfied: packaging<25,>=23.2 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from langchain-core<1.0.0,>=0.3.66->langchain) (24.1)\n",
      "Requirement already satisfied: typing-extensions>=4.7 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from langchain-core<1.0.0,>=0.3.66->langchain) (4.11.0)\n",
      "Requirement already satisfied: httpx<1,>=0.23.0 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from langsmith>=0.1.17->langchain) (0.27.0)\n",
      "Requirement already satisfied: orjson<4.0.0,>=3.9.14 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from langsmith>=0.1.17->langchain) (3.10.18)\n",
      "Requirement already satisfied: requests-toolbelt<2.0.0,>=1.0.0 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from langsmith>=0.1.17->langchain) (1.0.0)\n",
      "Requirement already satisfied: zstandard<0.24.0,>=0.23.0 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from langsmith>=0.1.17->langchain) (0.23.0)\n",
      "Requirement already satisfied: annotated-types>=0.4.0 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from pydantic<3.0.0,>=2.7.4->langchain) (0.6.0)\n",
      "Requirement already satisfied: pydantic-core==2.20.1 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from pydantic<3.0.0,>=2.7.4->langchain) (2.20.1)\n",
      "Requirement already satisfied: charset-normalizer<4,>=2 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from requests<3,>=2->langchain) (3.3.2)\n",
      "Requirement already satisfied: idna<4,>=2.5 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from requests<3,>=2->langchain) (3.7)\n",
      "Requirement already satisfied: urllib3<3,>=1.21.1 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from requests<3,>=2->langchain) (2.2.3)\n",
      "Requirement already satisfied: certifi>=2017.4.17 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from requests<3,>=2->langchain) (2025.4.26)\n",
      "Requirement already satisfied: greenlet!=0.4.17 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from SQLAlchemy<3,>=1.4->langchain) (3.0.1)\n",
      "Requirement already satisfied: anyio in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from httpx<1,>=0.23.0->langsmith>=0.1.17->langchain) (4.2.0)\n",
      "Requirement already satisfied: httpcore==1.* in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from httpx<1,>=0.23.0->langsmith>=0.1.17->langchain) (1.0.2)\n",
      "Requirement already satisfied: sniffio in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from httpx<1,>=0.23.0->langsmith>=0.1.17->langchain) (1.3.0)\n",
      "Requirement already satisfied: h11<0.15,>=0.13 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from httpcore==1.*->httpx<1,>=0.23.0->langsmith>=0.1.17->langchain) (0.14.0)\n",
      "Requirement already satisfied: jsonpointer>=1.9 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from jsonpatch<2.0,>=1.33->langchain-core<1.0.0,>=0.3.66->langchain) (2.1)\n",
      "Using cached langchain-0.3.26-py3-none-any.whl (1.0 MB)\n",
      "Using cached langchain_core-0.3.68-py3-none-any.whl (441 kB)\n",
      "Using cached langchain_text_splitters-0.3.8-py3-none-any.whl (32 kB)\n",
      "Downloading langsmith-0.4.5-py3-none-any.whl (367 kB)\n",
      "Installing collected packages: langsmith, langchain-core, langchain-text-splitters, langchain\n",
      "Successfully installed langchain-0.3.26 langchain-core-0.3.68 langchain-text-splitters-0.3.8 langsmith-0.4.5\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING: Ignoring invalid distribution ~rotli (C:\\Users\\mergi\\anaconda3\\Lib\\site-packages)\n",
      "WARNING: Ignoring invalid distribution ~rotli (C:\\Users\\mergi\\anaconda3\\Lib\\site-packages)\n",
      "WARNING: Ignoring invalid distribution ~rotli (C:\\Users\\mergi\\anaconda3\\Lib\\site-packages)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: openai in c:\\users\\mergi\\anaconda3\\lib\\site-packages (1.95.0)\n",
      "Requirement already satisfied: anyio<5,>=3.5.0 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from openai) (4.2.0)\n",
      "Requirement already satisfied: distro<2,>=1.7.0 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from openai) (1.9.0)\n",
      "Requirement already satisfied: httpx<1,>=0.23.0 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from openai) (0.27.0)\n",
      "Requirement already satisfied: jiter<1,>=0.4.0 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from openai) (0.10.0)\n",
      "Requirement already satisfied: pydantic<3,>=1.9.0 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from openai) (2.8.2)\n",
      "Requirement already satisfied: sniffio in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from openai) (1.3.0)\n",
      "Requirement already satisfied: tqdm>4 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from openai) (4.66.5)\n",
      "Requirement already satisfied: typing-extensions<5,>=4.11 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from openai) (4.11.0)\n",
      "Requirement already satisfied: idna>=2.8 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from anyio<5,>=3.5.0->openai) (3.7)\n",
      "Requirement already satisfied: certifi in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from httpx<1,>=0.23.0->openai) (2025.4.26)\n",
      "Requirement already satisfied: httpcore==1.* in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from httpx<1,>=0.23.0->openai) (1.0.2)\n",
      "Requirement already satisfied: h11<0.15,>=0.13 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from httpcore==1.*->httpx<1,>=0.23.0->openai) (0.14.0)\n",
      "Requirement already satisfied: annotated-types>=0.4.0 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from pydantic<3,>=1.9.0->openai) (0.6.0)\n",
      "Requirement already satisfied: pydantic-core==2.20.1 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from pydantic<3,>=1.9.0->openai) (2.20.1)\n",
      "Requirement already satisfied: colorama in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from tqdm>4->openai) (0.4.6)\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING: Ignoring invalid distribution ~rotli (C:\\Users\\mergi\\anaconda3\\Lib\\site-packages)\n",
      "WARNING: Ignoring invalid distribution ~rotli (C:\\Users\\mergi\\anaconda3\\Lib\\site-packages)\n",
      "WARNING: Ignoring invalid distribution ~rotli (C:\\Users\\mergi\\anaconda3\\Lib\\site-packages)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: folium in c:\\users\\mergi\\anaconda3\\lib\\site-packages (0.20.0)\n",
      "Requirement already satisfied: branca>=0.6.0 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from folium) (0.8.1)\n",
      "Requirement already satisfied: jinja2>=2.9 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from folium) (3.1.4)\n",
      "Requirement already satisfied: numpy in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from folium) (1.26.4)\n",
      "Requirement already satisfied: requests in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from folium) (2.32.3)\n",
      "Requirement already satisfied: xyzservices in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from folium) (2022.9.0)\n",
      "Requirement already satisfied: MarkupSafe>=2.0 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from jinja2>=2.9->folium) (2.1.3)\n",
      "Requirement already satisfied: charset-normalizer<4,>=2 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from requests->folium) (3.3.2)\n",
      "Requirement already satisfied: idna<4,>=2.5 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from requests->folium) (3.7)\n",
      "Requirement already satisfied: urllib3<3,>=1.21.1 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from requests->folium) (2.2.3)\n",
      "Requirement already satisfied: certifi>=2017.4.17 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from requests->folium) (2025.4.26)\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING: Ignoring invalid distribution ~rotli (C:\\Users\\mergi\\anaconda3\\Lib\\site-packages)\n",
      "WARNING: Ignoring invalid distribution ~rotli (C:\\Users\\mergi\\anaconda3\\Lib\\site-packages)\n",
      "WARNING: Ignoring invalid distribution ~rotli (C:\\Users\\mergi\\anaconda3\\Lib\\site-packages)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: snowflake-connector-python in c:\\users\\mergi\\appdata\\roaming\\python\\python312\\site-packages (3.16.0)\n",
      "Requirement already satisfied: bcrypt in c:\\users\\mergi\\anaconda3\\lib\\site-packages (3.2.0)\n",
      "Requirement already satisfied: asn1crypto<2.0.0,>0.24.0 in c:\\users\\mergi\\appdata\\roaming\\python\\python312\\site-packages (from snowflake-connector-python) (1.5.1)\n",
      "Requirement already satisfied: boto3>=1.24 in c:\\users\\mergi\\appdata\\roaming\\python\\python312\\site-packages (from snowflake-connector-python) (1.39.3)\n",
      "Requirement already satisfied: botocore>=1.24 in c:\\users\\mergi\\appdata\\roaming\\python\\python312\\site-packages (from snowflake-connector-python) (1.39.3)\n",
      "Requirement already satisfied: cffi<2.0.0,>=1.9 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from snowflake-connector-python) (1.17.1)\n",
      "Requirement already satisfied: cryptography>=3.1.0 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from snowflake-connector-python) (43.0.0)\n",
      "Requirement already satisfied: pyOpenSSL<26.0.0,>=22.0.0 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from snowflake-connector-python) (24.2.1)\n",
      "Requirement already satisfied: pyjwt<3.0.0 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from snowflake-connector-python) (2.8.0)\n",
      "Requirement already satisfied: pytz in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from snowflake-connector-python) (2024.1)\n",
      "Requirement already satisfied: requests<3.0.0 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from snowflake-connector-python) (2.32.3)\n",
      "Requirement already satisfied: packaging in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from snowflake-connector-python) (24.1)\n",
      "Requirement already satisfied: charset_normalizer<4,>=2 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from snowflake-connector-python) (3.3.2)\n",
      "Requirement already satisfied: idna<4,>=2.5 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from snowflake-connector-python) (3.7)\n",
      "Requirement already satisfied: certifi>=2017.4.17 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from snowflake-connector-python) (2025.4.26)\n",
      "Requirement already satisfied: typing_extensions<5,>=4.3 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from snowflake-connector-python) (4.11.0)\n",
      "Requirement already satisfied: filelock<4,>=3.5 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from snowflake-connector-python) (3.13.1)\n",
      "Requirement already satisfied: sortedcontainers>=2.4.0 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from snowflake-connector-python) (2.4.0)\n",
      "Requirement already satisfied: platformdirs<5.0.0,>=2.6.0 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from snowflake-connector-python) (3.10.0)\n",
      "Requirement already satisfied: tomlkit in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from snowflake-connector-python) (0.13.3)\n",
      "Requirement already satisfied: six>=1.4.1 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from bcrypt) (1.16.0)\n",
      "Requirement already satisfied: jmespath<2.0.0,>=0.7.1 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from boto3>=1.24->snowflake-connector-python) (1.0.1)\n",
      "Requirement already satisfied: s3transfer<0.14.0,>=0.13.0 in c:\\users\\mergi\\appdata\\roaming\\python\\python312\\site-packages (from boto3>=1.24->snowflake-connector-python) (0.13.0)\n",
      "Requirement already satisfied: python-dateutil<3.0.0,>=2.1 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from botocore>=1.24->snowflake-connector-python) (2.9.0.post0)\n",
      "Requirement already satisfied: urllib3!=2.2.0,<3,>=1.25.4 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from botocore>=1.24->snowflake-connector-python) (2.2.3)\n",
      "Requirement already satisfied: pycparser in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from cffi<2.0.0,>=1.9->snowflake-connector-python) (2.21)\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING: Ignoring invalid distribution ~rotli (C:\\Users\\mergi\\anaconda3\\Lib\\site-packages)\n",
      "WARNING: Ignoring invalid distribution ~rotli (C:\\Users\\mergi\\anaconda3\\Lib\\site-packages)\n",
      "WARNING: Ignoring invalid distribution ~rotli (C:\\Users\\mergi\\anaconda3\\Lib\\site-packages)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: snowflake-connector-python in c:\\users\\mergi\\appdata\\roaming\\python\\python312\\site-packages (3.16.0)\n",
      "Requirement already satisfied: asn1crypto<2.0.0,>0.24.0 in c:\\users\\mergi\\appdata\\roaming\\python\\python312\\site-packages (from snowflake-connector-python) (1.5.1)\n",
      "Requirement already satisfied: boto3>=1.24 in c:\\users\\mergi\\appdata\\roaming\\python\\python312\\site-packages (from snowflake-connector-python) (1.39.3)\n",
      "Requirement already satisfied: botocore>=1.24 in c:\\users\\mergi\\appdata\\roaming\\python\\python312\\site-packages (from snowflake-connector-python) (1.39.3)\n",
      "Requirement already satisfied: cffi<2.0.0,>=1.9 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from snowflake-connector-python) (1.17.1)\n",
      "Requirement already satisfied: cryptography>=3.1.0 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from snowflake-connector-python) (43.0.0)\n",
      "Requirement already satisfied: pyOpenSSL<26.0.0,>=22.0.0 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from snowflake-connector-python) (24.2.1)\n",
      "Requirement already satisfied: pyjwt<3.0.0 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from snowflake-connector-python) (2.8.0)\n",
      "Requirement already satisfied: pytz in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from snowflake-connector-python) (2024.1)\n",
      "Requirement already satisfied: requests<3.0.0 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from snowflake-connector-python) (2.32.3)\n",
      "Requirement already satisfied: packaging in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from snowflake-connector-python) (24.1)\n",
      "Requirement already satisfied: charset_normalizer<4,>=2 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from snowflake-connector-python) (3.3.2)\n",
      "Requirement already satisfied: idna<4,>=2.5 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from snowflake-connector-python) (3.7)\n",
      "Requirement already satisfied: certifi>=2017.4.17 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from snowflake-connector-python) (2025.4.26)\n",
      "Requirement already satisfied: typing_extensions<5,>=4.3 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from snowflake-connector-python) (4.11.0)\n",
      "Requirement already satisfied: filelock<4,>=3.5 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from snowflake-connector-python) (3.13.1)\n",
      "Requirement already satisfied: sortedcontainers>=2.4.0 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from snowflake-connector-python) (2.4.0)\n",
      "Requirement already satisfied: platformdirs<5.0.0,>=2.6.0 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from snowflake-connector-python) (3.10.0)\n",
      "Requirement already satisfied: tomlkit in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from snowflake-connector-python) (0.13.3)\n",
      "Requirement already satisfied: jmespath<2.0.0,>=0.7.1 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from boto3>=1.24->snowflake-connector-python) (1.0.1)\n",
      "Requirement already satisfied: s3transfer<0.14.0,>=0.13.0 in c:\\users\\mergi\\appdata\\roaming\\python\\python312\\site-packages (from boto3>=1.24->snowflake-connector-python) (0.13.0)\n",
      "Requirement already satisfied: python-dateutil<3.0.0,>=2.1 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from botocore>=1.24->snowflake-connector-python) (2.9.0.post0)\n",
      "Requirement already satisfied: urllib3!=2.2.0,<3,>=1.25.4 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from botocore>=1.24->snowflake-connector-python) (2.2.3)\n",
      "Requirement already satisfied: pycparser in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from cffi<2.0.0,>=1.9->snowflake-connector-python) (2.21)\n",
      "Requirement already satisfied: six>=1.5 in c:\\users\\mergi\\anaconda3\\lib\\site-packages (from python-dateutil<3.0.0,>=2.1->botocore>=1.24->snowflake-connector-python) (1.16.0)\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING: Ignoring invalid distribution ~rotli (C:\\Users\\mergi\\anaconda3\\Lib\\site-packages)\n",
      "WARNING: Ignoring invalid distribution ~rotli (C:\\Users\\mergi\\anaconda3\\Lib\\site-packages)\n",
      "WARNING: Ignoring invalid distribution ~rotli (C:\\Users\\mergi\\anaconda3\\Lib\\site-packages)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "* Running on local URL:  http://127.0.0.1:7866\n",
      "* Running on public URL: https://6c82295ba31c72963c.gradio.live\n",
      "\n",
      "This share link expires in 1 week. For free permanent hosting and GPU upgrades, run `gradio deploy` from the terminal in the working directory to deploy to Hugging Face Spaces (https://huggingface.co/spaces)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div><iframe src=\"https://6c82295ba31c72963c.gradio.live\" width=\"100%\" height=\"500\" allow=\"autoplay; camera; microphone; clipboard-read; clipboard-write;\" frameborder=\"0\" allowfullscreen></iframe></div>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "!pip install gradio\n",
    "!pip install langchain\n",
    "!pip install openai\n",
    "!pip install folium\n",
    "!pip install snowflake-connector-python bcrypt\n",
    "!{sys.executable} -m pip install snowflake-connector-python\n",
    "\n",
    "import gradio as gr\n",
    "import openai\n",
    "import requests\n",
    "from math import radians, sin, cos, sqrt, atan2\n",
    "import os\n",
    "from dotenv import load_dotenv\n",
    "from langchain.prompts import PromptTemplate\n",
    "import config\n",
    "\n",
    "load_dotenv()\n",
    "GOOGLE_API_KEY = os.getenv(\"GOOGLE_API_KEY\")\n",
    "OPENAI_API_KEY = os.getenv(\"OPENAI_API_KEY\")\n",
    "\n",
    "# -------------------------\n",
    "# Haversine Distance Helper\n",
    "# -------------------------\n",
    "def haversine(lat1, lon1, lat2, lon2):\n",
    "    R = 6371.0  # Earth radius in km\n",
    "    dlat = radians(lat2 - lat1)\n",
    "    dlon = radians(lon2 - lon1)\n",
    "    a = sin(dlat / 2)**2 + cos(radians(lat1)) * cos(radians(lat2)) * sin(dlon / 2)**2\n",
    "    c = 2 * atan2(sqrt(a), sqrt(1 - a))\n",
    "    return round(R * c, 2)\n",
    "\n",
    "\n",
    "# -------------------------\n",
    "# Snowflake\n",
    "# -------------------------\n",
    "def get_snowflake_connection():\n",
    "    return snowflake.connector.connect(\n",
    "        user=config.SNOWFLAKE_USER,\n",
    "        password=config.SNOWFLAKE_PASSWORD,\n",
    "        account=config.SNOWFLAKE_ACCOUNT,\n",
    "        warehouse=config.SNOWFLAKE_WAREHOUSE,\n",
    "        database=config.SNOWFLAKE_DATABASE,\n",
    "        schema=config.SNOWFLAKE_SCHEMA\n",
    "    )\n",
    "  \n",
    "def create_account(username, password):\n",
    "    conn = get_snowflake_connection()\n",
    "    cs = conn.cursor()\n",
    "    hashed_pw = bcrypt.hashpw(password.encode(), bcrypt.gensalt()).decode()\n",
    "    try:\n",
    "        cs.execute(\n",
    "            \"INSERT INTO USER_ACCOUNTS (username, password_hash) VALUES (%s, %s)\",\n",
    "            (username, hashed_pw)\n",
    "        )\n",
    "        conn.commit()\n",
    "        return \"Account created successfully.\"\n",
    "    except snowflake.connector.errors.ProgrammingError as e:\n",
    "        if \"unique constraint\" in str(e).lower():\n",
    "            return \"Username already exists.\"\n",
    "        else:\n",
    "            return f\"Error: {e}\"\n",
    "    finally:\n",
    "        cs.close()\n",
    "        conn.close()\n",
    "\n",
    "# Login\n",
    "def login(username, password):\n",
    "    conn = get_snowflake_connection()\n",
    "    cs = conn.cursor()\n",
    "    try:\n",
    "        cs.execute(\n",
    "            \"SELECT password_hash FROM USER_ACCOUNTS WHERE username = %s\",\n",
    "            (username,)\n",
    "        )\n",
    "        row = cs.fetchone()\n",
    "        if row:\n",
    "            stored_hash = row[0].encode()\n",
    "            if bcrypt.checkpw(password.encode(), stored_hash):\n",
    "                return True, \"Login successful.\"\n",
    "            else:\n",
    "                return False, \"Invalid password.\"\n",
    "        else:\n",
    "            return False, \"User not found.\"\n",
    "    except Exception as e:\n",
    "        return False, f\"Error: {e}\"\n",
    "    finally:\n",
    "        cs.close()\n",
    "        conn.close()\n",
    "\n",
    "# -------------------------\n",
    "# Gradio Login and Sign Up Interface\n",
    "# -------------------------\n",
    "def login_fn(username, password):\n",
    "    success, msg = login(username, password)\n",
    "    if success:\n",
    "        return (\n",
    "            gr.update(visible=False),  # Hide login\n",
    "            gr.update(visible=False),  # Hide signup\n",
    "            gr.update(visible=True),   # Show app\n",
    "            msg\n",
    "        )\n",
    "    else:\n",
    "        return (\n",
    "            gr.update(visible=True),\n",
    "            gr.update(visible=True),\n",
    "            gr.update(visible=False),\n",
    "            msg\n",
    "        )\n",
    "\n",
    "def signup_fn(new_username, new_password):\n",
    "    try:\n",
    "        msg = create_account(new_username, new_password)\n",
    "        return msg\n",
    "    except Exception as e:\n",
    "        return f\"Error: {e}\"\n",
    "\n",
    "\n",
    "# -------------------------\n",
    "# Google Places API Search\n",
    "# -------------------------\n",
    "def get_nearby_gyms(address, radius=5000, max_results=20):\n",
    "    # Step 1: Geocode address\n",
    "    geo_url = f\"https://maps.googleapis.com/maps/api/geocode/json?address={address}&key={GOOGLE_API_KEY}\"\n",
    "    geo_resp = requests.get(geo_url).json()\n",
    "    if geo_resp[\"status\"] != \"OK\":\n",
    "        return [], f\"Geocoding error: {geo_resp['status']}\"\n",
    "\n",
    "    lat = geo_resp[\"results\"][0][\"geometry\"][\"location\"][\"lat\"]\n",
    "    lng = geo_resp[\"results\"][0][\"geometry\"][\"location\"][\"lng\"]\n",
    "\n",
    "    # Step 2: Places Nearby Search\n",
    "    places_url = (\n",
    "        f\"https://maps.googleapis.com/maps/api/place/nearbysearch/json?\"\n",
    "        f\"location={lat},{lng}&radius={radius}&keyword=gym&type=establishment&key={GOOGLE_API_KEY}\"\n",
    "    )\n",
    "    places_resp = requests.get(places_url).json()\n",
    "    if places_resp[\"status\"] != \"OK\":\n",
    "        return [], f\"Places API error: {places_resp['status']}\"\n",
    "\n",
    "    gyms = []\n",
    "    for place in places_resp.get(\"results\", [])[:max_results]:\n",
    "        gym_lat = place[\"geometry\"][\"location\"][\"lat\"]\n",
    "        gym_lng = place[\"geometry\"][\"location\"][\"lng\"]\n",
    "        distance_km = haversine(lat, lng, gym_lat, gym_lng)\n",
    "        place_id = place.get(\"place_id\")\n",
    "        photo_url = None\n",
    "        if \"photos\" in place:\n",
    "            photo_ref = place[\"photos\"][0][\"photo_reference\"]\n",
    "            photo_url = (\n",
    "                f\"https://maps.googleapis.com/maps/api/place/photo\"\n",
    "                f\"?maxwidth=400&photoreference={photo_ref}&key={GOOGLE_API_KEY}\"\n",
    "            )\n",
    "        map_url = f\"https://www.google.com/maps/place/?q=place_id:{place_id}\"\n",
    "\n",
    "        gyms.append({\n",
    "            \"name\": place.get(\"name\"),\n",
    "            \"vicinity\": place.get(\"vicinity\", \"N/A\"),\n",
    "            \"rating\": place.get(\"rating\", \"N/A\"),\n",
    "            \"distance_km\": distance_km,\n",
    "            \"lat\": gym_lat,\n",
    "            \"lng\": gym_lng,\n",
    "            \"map_url\": map_url,\n",
    "            \"photo_url\": photo_url\n",
    "        })\n",
    "\n",
    "    return gyms, None\n",
    "\n",
    "# --- LangChain Prompt ---\n",
    "def build_prompt(region, disease, budget, gym_data):\n",
    "    gyms_formatted = \"\\n\".join([\n",
    "        f\"- {g['name']} ({g['vicinity']}, rating {g['rating']}, {g['distance_km']} km away)\\n  Link: {g['map_url']}\"\n",
    "        for g in gym_data\n",
    "    ])\n",
    "\n",
    "    prompt_template = PromptTemplate(\n",
    "        input_variables=[\"region\", \"disease\", \"budget\", \"gyms\"],\n",
    "        template=(\n",
    "            \"A user with the following profile is looking for a gym:\\n\"\n",
    "            \"- Region/postcode: {region}\\n\"\n",
    "            \"- Health condition: {disease}\\n\"\n",
    "            \"- Budget: {budget}\\n\\n\"\n",
    "            \"Here are gyms found nearby:\\n{gyms}\\n\\n\"\n",
    "            \"Please pick 3 gyms that are most suitable. Consider:\\n\"\n",
    "            \"- If their condition suggests they need disability-friendly facilities\\n\"\n",
    "            \"- Whether the gym brand/location implies affordability (within budget)\\n\"\n",
    "            \"- Proximity to the user's region\\n\\n\"\n",
    "            \"Format like this:\\n\"\n",
    "            \"1. [Gym Name] - [estimated price], [distance] – [accessibility note or reason for recommendation]\"\n",
    "        )\n",
    "    )\n",
    "\n",
    "    return prompt_template.format(region=region, disease=disease, budget=budget, gyms=gyms_formatted)\n",
    "\n",
    "# --- OpenAI GPT Call ---\n",
    "def get_gpt_recommendations(prompt):\n",
    "    client = OpenAI(api_key=OPENAI_API_KEY)\n",
    "    response = client.chat.completions.create(\n",
    "        model=\"gpt-4\",\n",
    "        messages=[{\"role\": \"user\", \"content\": prompt}],\n",
    "        temperature=0.7\n",
    "    )\n",
    "    return response.choices[0].message.content\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "# -------------------------\n",
    "# Call OpenAI API\n",
    "# -------------------------\n",
    "from openai import OpenAI\n",
    "\n",
    "def get_gpt_recommendations(prompt):\n",
    "    client = OpenAI(api_key=OPENAI_API_KEY)\n",
    "    \n",
    "    response = client.chat.completions.create(\n",
    "        model=\"gpt-4\",\n",
    "        messages=[{\"role\": \"user\", \"content\": prompt}],\n",
    "        temperature=0.7\n",
    "    )\n",
    "    \n",
    "    return response.choices[0].message.content\n",
    "\n",
    "# --- Folium Map ---\n",
    "def create_map(gym_data, center_lat, center_lng):\n",
    "    gym_map = folium.Map(location=[center_lat, center_lng], zoom_start=13)\n",
    "    for gym in gym_data:\n",
    "        popup = f\"<b>{gym['name']}</b><br>{gym['vicinity']}<br>⭐ {gym['rating']}<br>{gym['distance_km']} km\"\n",
    "        if gym[\"photo_url\"]:\n",
    "            popup += f\"<br><img src='{gym['photo_url']}' width='200'>\"\n",
    "        popup += f\"<br><a href='{gym['map_url']}' target='_blank'>Open in Maps</a>\"\n",
    "        folium.Marker(\n",
    "            location=[gym[\"lat\"], gym[\"lng\"]],\n",
    "            popup=folium.Popup(popup, max_width=300),\n",
    "            tooltip=gym[\"name\"]\n",
    "        ).add_to(gym_map)\n",
    "    return gym_map._repr_html_()\n",
    "\n",
    "\n",
    "# -------------------------\n",
    "# Main Pipeline\n",
    "# -------------------------\n",
    "def gym_finder_pipeline(region, disease, budget):\n",
    "    gym_data, error = get_nearby_gyms(region)\n",
    "    if error:\n",
    "        return error, None\n",
    "\n",
    "    prompt = build_prompt(region, disease, budget, gym_data)\n",
    "    try:\n",
    "        recommendations = get_gpt_recommendations(prompt)\n",
    "    except Exception as e:\n",
    "        return f\"OpenAI API Error: {str(e)}\", None\n",
    "\n",
    "    center_lat = gym_data[0][\"lat\"]\n",
    "    center_lng = gym_data[0][\"lng\"]\n",
    "    map_html = create_map(gym_data, center_lat, center_lng)\n",
    "\n",
    "    return recommendations, map_html\n",
    "\n",
    "# -------------------------\n",
    "# Gradio Interface\n",
    "# -------------------------\n",
    "with gr.Blocks() as app:\n",
    "    # Track login state\n",
    "    logged_in = gr.State(False)\n",
    "\n",
    "    # Login interface\n",
    "    with gr.Column(visible=True) as login_section:\n",
    "        gr.Markdown(\"### Login\")\n",
    "        login_username = gr.Textbox(label=\"Username\")\n",
    "        login_password = gr.Textbox(label=\"Password\", type=\"password\")\n",
    "        login_btn = gr.Button(\"Login\")\n",
    "        login_msg = gr.Text(label=\"Login Status\")\n",
    "\n",
    "    # Sign-up interface\n",
    "    with gr.Column(visible=True) as signup_section:\n",
    "        gr.Markdown(\"### Or Sign Up\")\n",
    "        signup_username = gr.Textbox(label=\"New Username\")\n",
    "        signup_password = gr.Textbox(label=\"New Password\", type=\"password\")\n",
    "        signup_btn = gr.Button(\"Sign Up\")\n",
    "        signup_msg = gr.Text(label=\"Sign Up Status\")\n",
    "\n",
    "    # Main app interface (initially hidden)\n",
    "    with gr.Column(visible=False) as app_section:\n",
    "        gr.Markdown(\"## Welcome to FitForAll\")\n",
    "        region_input = gr.Textbox(label=\"Your Region or Postcode\")\n",
    "        disease_input = gr.Textbox(label=\"Health Condition (optional)\", placeholder=\"e.g. asthma\")\n",
    "        budget_input = gr.Textbox(label=\"Monthly Budget\", placeholder=\"e.g. £30/month\")\n",
    "        submit_btn = gr.Button(\"Get Gym Recommendations\")\n",
    "        gpt_output = gr.Text(label=\"Recommended Gyms\")\n",
    "        map_output = gr.HTML(label=\"Map of Nearby Gyms\")\n",
    "        logout_btn = gr.Button(\"Logout\")\n",
    "\n",
    "    # --- Button functionality ---\n",
    "    login_btn.click(\n",
    "        fn=login_fn,\n",
    "        inputs=[login_username, login_password],\n",
    "        outputs=[login_section, signup_section, app_section, login_msg],\n",
    "    )\n",
    "\n",
    "    signup_btn.click(\n",
    "        fn=signup_fn,\n",
    "        inputs=[signup_username, signup_password],\n",
    "        outputs=[signup_msg],\n",
    "    )\n",
    "\n",
    "    submit_btn.click(\n",
    "        fn=gym_finder_pipeline,\n",
    "        inputs=[region_input, disease_input, budget_input],\n",
    "        outputs=[gpt_output, map_output]\n",
    "    )\n",
    "\n",
    "    logout_btn.click(\n",
    "        fn=lambda: (gr.update(visible=True), gr.update(visible=True), gr.update(visible=False), \"\"),\n",
    "        inputs=[],\n",
    "        outputs=[login_section, signup_section, app_section, login_msg]\n",
    "    )\n",
    "\n",
    "# Launch full app\n",
    "if __name__ == \"__main__\":\n",
    "    app.launch(share=True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "a8d1da6a-1181-4262-a3c2-4dfc3be53d0f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Closing server running on port: 7860\n"
     ]
    }
   ],
   "source": [
    "demo.close()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ed6fd581-429f-4948-abd4-5ea84ad0a13c",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [conda env:base] *",
   "language": "python",
   "name": "conda-base-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
